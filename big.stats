### Compile big Blocklist ###

Config:

** Build - 6:

   extendWWWFLD
   hosts
   adblock
   adblockwhite
   no_adblock_convert
   localpush

++ Prioritized Blocklists - 1:

   ../../data/rules.list.block

 - White - 29:

   big.white

-- Whitelists - 2:

   ../../data/white.list
   ../../data/white.list.adguard

-- Unblocklists - 2:

   ../../data/white.list.important
   ../../data/white.list.referral

Initialize ...

# Download and convert Sourcelists ...

  Nr |   Count | Format  | Source | Status  | File      | URL/File
   1 |  473549 | domains | local  | online  | changed   | multi.txt
   2 |   46555 | domains | local  | online  | changed   | fake.txt
   3 | 1061408 | domains | http   | online  | changed   | https://dbl.oisd.nl
   4 |   40610 | adblock | http   | online  | unchanged | https://adguardteam.github.io/AdGuardSDNSFilter/Filters/filter.txt

# Build big Domainlist ...

Stats big:

** Source (raw):    1622122
== Source (unique): 1334222 (-287900)
-- White:           1333957 (-265)
-- White(*):        1331011 (-2946)
++ Block:           1331030 (+19)
-- Unblock:         1330978 (-52)
-- Unblock(*):      1330897 (-81)
++ FLD:             1331112 (+215)
++ WWW:             1343098 (+11986)

1343098 unique Domains - Version 2021.1024.061711
MD5 Domains RAW: 7704148c19394a7980329a0899b9973f

# Convert big to Hostlist ... 

# Convert big to AdBlocklist ...

ℹ Starting @adguard/hostlist-compiler v1.0.12
ℹ Starting the compiler
ℹ Configuration: {
    "name": "Big",
    "sources": [
        {
            "source": "/media/nas/git/adguard/multi.adblock",
            "type": "adblock",
            "transformations": [
                "Validate"
            ]
        },
        {
            "source": "/media/nas/git/adguard/fake.adblock",
            "type": "adblock",
            "transformations": [
                "Validate"
            ]
        },
        {
            "source": "https://abp.oisd.nl/",
            "type": "adblock",
            "exclusions_sources": [
                "../exclusions.txt",
                "../../../data/adblock.exclusions.referral",
                "../../../data/adblock.exclusions.list",
                "../../../data/adblock.exclusions.important",
                "https://raw.githubusercontent.com/AdguardTeam/AdGuardSDNSFilter/master/Filters/exclusions.txt"
            ],
            "transformations": [
                "Validate"
            ]
        },
        {
            "source": "https://adguardteam.github.io/AdGuardSDNSFilter/Filters/filter.txt",
            "type": "adblock",
            "exclusions_sources": [
                "../exclusions.txt",
                "../../../data/adblock.exclusions.referral",
                "../../../data/adblock.exclusions.list",
                "../../../data/adblock.exclusions.important"
            ],
            "transformations": [
                "Validate"
            ]
        },
        {
            "source": "https://raw.githubusercontent.com/AdguardTeam/AdGuardSDNSFilter/master/Filters/rules.txt",
            "exclusions_sources": [
                "../exclusions.txt",
                "../../../data/adblock.exclusions.referral",
                "../../../data/adblock.exclusions.important"
            ],
            "transformations": [
                "Validate"
            ],
            "type": "adblock"
        },
        {
            "source": "../rules.txt",
            "exclusions_sources": [
                "../exclusions.txt",
                "../../../data/adblock.exclusions.referral",
                "../../../data/adblock.exclusions.important"
            ],
            "transformations": [
                "Validate"
            ],
            "type": "adblock"
        },
        {
            "source": "https://raw.githubusercontent.com/AdguardTeam/AdGuardSDNSFilter/master/Filters/exceptions.txt",
            "transformations": [
                "Validate"
            ],
            "type": "adblock"
        },
        {
            "source": "../exceptions.txt",
            "transformations": [
                "Validate"
            ],
            "type": "adblock"
        }
    ],
    "transformations": [
        "Compress"
    ]
}
ℹ Start compiling /media/nas/git/adguard/multi.adblock
ℹ Original length is 257727
ℹ Length after applying transformations is 257727
ℹ Start compiling /media/nas/git/adguard/fake.adblock
ℹ Original length is 23680
ℹ Length after applying transformations is 23680
ℹ Start compiling https://abp.oisd.nl/
ℹ Original length is 372469
ℹ Filtering the list of rules using 1439 exclusion rules
ℹ Excluded 318 rules. 372151 rules left.
ℹ Length after applying transformations is 372150
ℹ Start compiling https://adguardteam.github.io/AdGuardSDNSFilter/Filters/filter.txt
ℹ Original length is 41681
ℹ Filtering the list of rules using 1114 exclusion rules
ℹ Excluded 57 rules. 41624 rules left.
ℹ Length after applying transformations is 41624
ℹ Start compiling https://raw.githubusercontent.com/AdguardTeam/AdGuardSDNSFilter/master/Filters/rules.txt
ℹ Original length is 576
ℹ Filtering the list of rules using 472 exclusion rules
ℹ Excluded 0 rules. 576 rules left.
ℹ Length after applying transformations is 570
ℹ Start compiling ../rules.txt
ℹ Original length is 2
ℹ Filtering the list of rules using 472 exclusion rules
ℹ Excluded 0 rules. 2 rules left.
ℹ Length after applying transformations is 2
ℹ Start compiling https://raw.githubusercontent.com/AdguardTeam/AdGuardSDNSFilter/master/Filters/exceptions.txt
ℹ Original length is 179
ℹ Length after applying transformations is 179
ℹ Start compiling ../exceptions.txt
ℹ Original length is 30
ℹ Length after applying transformations is 30
ℹ The list was compressed from 695986 to 494432
ℹ Final length of the list is 494438
ℹ Writing output to /media/nas/git/rpi/pihole/blocklists/build/big/out/big.adblock
ℹ Finished compiling

# Attach header to big Domainlist ...

# Push big to local Repositories ...

